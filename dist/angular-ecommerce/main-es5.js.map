{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/common/cart-item.ts","webpack:///src/app/common/product.ts","webpack:///src/app/components/cart-details/cart-details.component.ts","webpack:///src/app/components/cart-details/cart-details.component.html","webpack:///src/app/components/cart-status/cart-status.component.ts","webpack:///src/app/components/cart-status/cart-status.component.html","webpack:///src/app/components/checkout/checkout.component.ts","webpack:///src/app/components/checkout/checkout.component.html","webpack:///src/app/components/product-category-menu/product-category-menu.component.ts","webpack:///src/app/components/product-category-menu/product-category-menu.component.html","webpack:///src/app/components/product-details/product-details.component.ts","webpack:///src/app/components/product-details/product-details.component.html","webpack:///src/app/components/product-list/product-list.component.ts","webpack:///src/app/components/product-list/product-list-grid.component.html","webpack:///src/app/components/search/search.component.ts","webpack:///src/app/components/search/search.component.html","webpack:///src/app/services/cart.service.ts","webpack:///src/app/services/product.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","routes","path","component","redirectTo","pathMatch","AppModule","forRoot","declarations","imports","providers","bootstrap","CartItem","product","name","imageUrl","unitPrice","quantity","Product","CartDetailsComponent","cartService","cartItems","totalPrice","totalQuantity","listCartDetails","subscribe","data","computeCartTotals","theCartItem","addToCart","decrementQuantity","remove","CartStatusComponent","updateCartStatus","CheckoutComponent","formBuilder","checkoutFormGroup","group","customer","firstName","lastName","email","shippingAddress","street","city","state","country","zipCode","billingAddress","creditCard","cardType","nameOnCard","cardNumber","securityCode","expirationMonth","expirationYear","event","target","checked","controls","setValue","value","reset","console","log","get","onSubmit","copyShippingAddressToBillingAddress","ProductCategoryMenuComponent","productService","listProductCategories","getProductCategories","JSON","stringify","productCategories","ProductDetailsComponent","route","paramMap","handleProductDetails","theProductId","snapshot","getProduct","ProductListComponent","products","currentCategoryId","previousCategoryId","searchMode","thePageNumber","thePageSize","theTotalElements","previousKeyword","listProducts","has","handleSearchProducts","handleListProducts","theKeyword","searchProductsPaginate","processResult","hasCategoryId","getProductListPaginate","_embedded","page","number","size","totalElements","pageSize","theProduct","updatePageSize","SearchComponent","router","navigateByUrl","doSearch","CartService","alreadyExistsInCart","existingCartItem","undefined","length","find","tempCartItem","push","totalPriceValue","totalQuantityValue","currentCartItem","next","logCartData","subTotalPrice","toFixed","itemIndex","findIndex","splice","providedIn","ProductService","httpClient","baseUrl","categoryUrl","productUrl","thePage","theCategoryId","searchUrl","getProducts","pipe","response","productCategory","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-ecommerce';\n}\n","<div class=\"page-wrapper\">\n\n  <!-- MENU SIDEBAR-->\n  <aside class=\"menu-sidebar d-none d-lg-block\">\n    <div class=\"logo\">\n      <a routerLink=\"/products\">\n        <img src=\"assets/images/logo.png\" alt=\"luv2shop\" class=\"img-responsive\">\n      </a>\n    </div>\n\n    <app-product-category-menu></app-product-category-menu>\n\n  </aside>\n  <!-- END MENU SIDEBAR-->\n\n  <div class=\"page-container\">\n    <!-- HEADER DESKTOP-->\n    <header class=\"header-desktop\">\n      <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n          <div class=\"header-wrap\">\n\n            <app-search></app-search>\n \n            <app-cart-status></app-cart-status>\n\n          </div>\n          <div class=\"account-wrap\"></div>\n        </div>\n      </div>\n    </header>\n    <!-- END HEADER DESKTOP-->\n\n    <!-- MAIN CONTENT-->\n    <router-outlet></router-outlet>\n\n  </div>\n</div>\n\n<!-- ENDS PAGE CONTAINER -->\n\n<footer>\n  <ul>\n    <li><a href=\"#\">About Us</a></li>\n    <li><a href=\"#\">Contact Us</a></li>\n    <li><a href=\"#\">Help</a></li>\n  </ul>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ProductListComponent } from './components/product-list/product-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ProductService } from './services/product.service';\n\nimport { Routes, RouterModule} from '@angular/router';\nimport { ProductCategoryMenuComponent } from './components/product-category-menu/product-category-menu.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CartStatusComponent } from './components/cart-status/cart-status.component';\nimport { CartDetailsComponent } from './components/cart-details/cart-details.component';\nimport { CheckoutComponent } from './components/checkout/checkout.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nconst routes: Routes = [\n  {path: 'checkout', component: CheckoutComponent},\n  {path: 'cart-details', component: CartDetailsComponent},\n  {path: 'products/:id', component: ProductDetailsComponent},\n  {path: 'search/:keyword', component: ProductListComponent},\n  {path: 'category/:id', component: ProductListComponent},\n  {path: 'category', component: ProductListComponent},\n  {path: 'products', component: ProductListComponent},\n  {path: '', redirectTo: '/products', pathMatch: 'full'},\n  {path: '**', redirectTo: '/products', pathMatch: 'full'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductListComponent,\n    ProductCategoryMenuComponent,\n    SearchComponent,\n    ProductDetailsComponent,\n    CartStatusComponent,\n    CartDetailsComponent,\n    CheckoutComponent\n  ],\n  imports: [\n    RouterModule.forRoot(routes),\n    BrowserModule,\n    HttpClientModule,\n    NgbModule,\n    ReactiveFormsModule\n  ],\n  providers: [ProductService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Product } from './product';\n\nexport class CartItem {\n\n    id: string;\n    name: string;\n    imageUrl: string;\n    unitPrice: number;\n\n    quantity: number;\n\n    constructor(product: Product) {\n        this.id = product.id;\n        this.name = product.name;\n        this.imageUrl = product.imageUrl;\n        this.unitPrice = product.unitPrice;\n\n        this.quantity = 1;\n    }\n}\n","export class Product {\n    id: string;\n    sku: string;\n    name: string;\n    description: string;\n    unitPrice: number;\n    imageUrl: string;\n    active: boolean;\n    unitsInStock: number;\n    dateCreated: Date;\n    lastUpdate: Date;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CartItem } from 'src/app/common/cart-item';\nimport { CartService } from 'src/app/services/cart.service';\n\n@Component({\n  selector: 'app-cart-details',\n  templateUrl: './cart-details.component.html',\n  styleUrls: ['./cart-details.component.css']\n})\nexport class CartDetailsComponent implements OnInit {\n\n  cartItems: CartItem[] = [];\n  totalPrice: number = 0;\n  totalQuantity: number = 0;\n\n  constructor(private cartService: CartService) { }\n\n  ngOnInit(): void {\n    this.listCartDetails();\n  }\n\n  listCartDetails() {\n\n    // get a handle to the cart items\n    this.cartItems = this.cartService.cartItems;\n\n    // subscribe to the cart totalPrice\n    this.cartService.totalPrice.subscribe(\n      data => this.totalPrice = data\n    );\n\n    // subscribe to the cart totalQuantity\n    this.cartService.totalQuantity.subscribe( \n      data => this.totalQuantity = data\n    );\n\n    // compute cart total price and quantity\n    this.cartService.computeCartTotals();\n  }\n\n  incrementQuantity(theCartItem: CartItem) {\n    this.cartService.addToCart(theCartItem);\n  }\n\n  decrementQuantity(theCartItem: CartItem) {\n    this.cartService.decrementQuantity(theCartItem);\n  }\n\n  remove(theCartItem: CartItem) {\n    this.cartService.remove(theCartItem);\n  }\n}\n","<div class=\"main-content\">\n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n\n            <div *ngIf=\"cartItems.length > 0\">\n\n                <table class=\"table table-bordered\">\n                    <tr>\n                        <th width=\"20%\">Product Image</th>\n                        <th width=\"50%\">Product Detail</th>\n                        <th width=\"30%\"></th>\n                    </tr>\n\n                    <tr *ngFor=\"let tempCartItem of cartItems\">\n                        <td>\n                            <img src=\"{{ tempCartItem.imageUrl }}\" class=\"img-responsive\" width=\"150px\" />\n                        </td>\n                        <td>\n                            <p>{{ tempCartItem.name }}</p>\n                            <p>{{ tempCartItem.unitPrice | currency: 'USD' }}</p>\n                        </td>\n                        <td>\n                            <div class=\"items\">\n                                <label>Quantity:</label>\n\n                                <div class=\"row no-gutters\">\n                                    <div class=\"col\">\n                                        <button (click)=\"incrementQuantity(tempCartItem)\" class=\"btn btn-primary btn-sm\">\n                                            <i class=\"fas fa-plus\"></i>\n                                        </button>\n                                    </div>\n\n                                    <div class=\"col ml-4 mr-2\">\n                                        {{ tempCartItem.quantity }}\n                                    </div>\n\n                                    <div class=\"col\">\n                                        <button (click)=\"decrementQuantity(tempCartItem)\" class=\"btn btn-primary btn-sm\">\n                                            <i class=\"fas fa-minus\"></i>\n                                        </button>\n                                    </div>\n\n                                    <div class=\"col-8\"></div>\n                                </div>\n\n                            </div>\n\n                            <button (click)=\"remove(tempCartItem)\" class=\"btn btn-primary btn-sm mt-2\">Remove</button>\n\n                            <p class=\"mt-2\">Subtotal: {{ tempCartItem.quantity * tempCartItem.unitPrice | currency: 'USD' }}</p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td colspan=\"2\"></td>\n                        <td style=\"font-weight: bold\">\n                            <p>Total Quantity: {{ totalQuantity }}</p>\n                            <p>Shipping: FREE</p>\n                            <p>Total Price: {{ totalPrice | currency: 'USD' }}</p>\n                            <a routerLink=\"/checkout\" class=\"btn btn-primary\">Checkout</a>\n                        </td>\n                    </tr>\n\n                </table>\n\n            </div>\n\n            <!-- if cart is empty then display a message -->\n            <div *ngIf=\"cartItems.length == 0\" class=\"alert alert-warning col-md-12\" role=\"alert\">\n                Your shopping cart is empty. \n            </div>\n\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CartService } from 'src/app/services/cart.service';\n\n@Component({\n  selector: 'app-cart-status',\n  templateUrl: './cart-status.component.html',\n  styleUrls: ['./cart-status.component.css']\n})\nexport class CartStatusComponent implements OnInit {\n\n  totalPrice: number = 0.00;\n  totalQuantity: number = 0;\n\n  constructor(private cartService: CartService) { }\n\n  ngOnInit(): void {\n    this.updateCartStatus();\n  }\n\n  updateCartStatus() {\n\n    // subscribe to the cart totalPrice\n    this.cartService.totalPrice.subscribe(\n      data => this.totalPrice = data\n    );\n\n    // subscribe to the cart totalQuantity\n    this.cartService.totalQuantity.subscribe(\n      data => this.totalQuantity = data\n    );\n  }\n\n}\n","<div class=\"cart-area d-n\">\n    <a routerLink=\"/cart-details\">\n        <div class=\"total\">{{ totalPrice | currency: 'USD' }}\n            <span>{{ totalQuantity }}</span> \n        </div> \n        <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>\n    </a>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n\n  checkoutFormGroup: FormGroup;\n\n  totalPrice: number = 0;\n  totalQuantity: number = 0;\n  \n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    \n    this.checkoutFormGroup = this.formBuilder.group({\n      customer: this.formBuilder.group({\n        firstName: [''],\n        lastName: [''],\n        email: ['']\n      }),\n      shippingAddress: this.formBuilder.group({\n        street: [''],\n        city: [''],\n        state: [''],\n        country: [''],\n        zipCode: ['']\n      }),\n      billingAddress: this.formBuilder.group({\n        street: [''],\n        city: [''],\n        state: [''],\n        country: [''],\n        zipCode: ['']\n      }),\n      creditCard: this.formBuilder.group({\n        cardType: [''],\n        nameOnCard: [''],\n        cardNumber: [''],\n        securityCode: [''],\n        expirationMonth: [''],\n        expirationYear: ['']\n      })\n    });\n  }\n\n  copyShippingAddressToBillingAddress(event) {\n\n    if (event.target.checked) {\n      this.checkoutFormGroup.controls.billingAddress\n            .setValue(this.checkoutFormGroup.controls.shippingAddress.value);\n    }\n    else {\n      this.checkoutFormGroup.controls.billingAddress.reset();\n    }\n    \n  }\n\n  onSubmit() {\n    console.log(\"Handling the submit button\");\n    console.log(this.checkoutFormGroup.get('customer').value);\n    console.log(\"The email address is \" + this.checkoutFormGroup.get('customer').value.email);\n  }\n}\n","<div class=\"main-content page-m\">\n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n\n            <form [formGroup]=\"checkoutFormGroup\" (ngSubmit)=\"onSubmit()\">\n\n                <!-- customer form group -->\n                <div formGroupName=\"customer\" class=\"form-area\">\n                    <h3>Customer</h3>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>First Name</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"firstName\" type=\"text\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Last Name</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"lastName\" type=\"text\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Email</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"email\" type=\"text\">\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n                <!-- shipping Address -->\n                <div formGroupName=\"shippingAddress\" class=\"form-area\">\n                    <h3>Shipping Address</h3>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Country</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <select formControlName=\"country\">\n                                    <option>TO DO</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Street</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"street\" type=\"text\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>City</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"city\" type=\"text\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>State</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <select formControlName=\"state\">\n                                    <option>TO DO</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Zip Code</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"zipCode\" type=\"text\">\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n                <!-- Add check box to copy shipping to billing -->\n                <div class=\"input-space\">\n                    <label class=\"au-checkbox\">\n                        <input type=\"checkbox\" (change)=\"copyShippingAddressToBillingAddress($event)\">\n                        <span class=\"au-checkmark\"></span>Billing Address same as Shipping Address\n                    </label>\n                </div>\n\n\n                <!-- Billing Address -->\n                <div formGroupName=\"billingAddress\" class=\"form-area\">\n                    <h3>Billing Address</h3>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Country</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <select formControlName=\"country\">\n                                    <option>TO DO</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Street</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"street\" type=\"text\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>City</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"city\" type=\"text\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>State</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <select formControlName=\"state\">\n                                    <option>TO DO</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Zip Code</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"zipCode\" type=\"text\">\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n                <!-- Credit Card -->\n                <div formGroupName=\"creditCard\" class=\"form-area\">\n                    <h3>Credit Card</h3>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Card Type</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <select formControlName=\"cardType\">\n                                    <option>Visa</option>\n                                    <option>Mastercard</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Name on Card</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"nameOnCard\" type=\"text\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Card Number</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"cardNumber\" type=\"text\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Security Code</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"securityCode\" type=\"text\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Expiration Month</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <select formControlName=\"expirationMonth\">\n                                    <option>TO DO</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Expiration Year</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <select formControlName=\"expirationYear\">\n                                    <option>TO DO</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n                <!-- Order details -->\n                <div class=\"form-area\">\n                    <h3>Review Your Order</h3>\n\n                    <p>Total Quantity: {{ totalQuantity }}</p>\n                    <p>Shipping: FREE</p>\n                    <p>Total Price: {{ totalPrice | currency: 'USD' }}</p>\n                </div>\n\n                <!-- submit button-->\n                <div class=\"text-center\">\n                    <button type=\"submit\" class=\"btn btn-info\">Purchase</button>\n                </div>\n\n            </form>\n\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ProductCategory } from 'src/app/common/product-category';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-product-category-menu',\n  templateUrl: './product-category-menu.component.html',\n  styleUrls: ['./product-category-menu.component.css']\n})\nexport class ProductCategoryMenuComponent implements OnInit {\n\n  productCategories: ProductCategory[];\n  \n  constructor(private productService: ProductService) { }\n\n  ngOnInit() {\n    this.listProductCategories();\n  }\n\n  listProductCategories() {\n\n    this.productService.getProductCategories().subscribe(\n      data => {\n        console.log('Product Categories=' + JSON.stringify(data));\n        this.productCategories = data;\n      }\n    );\n  }\n\n}\n","<div class=\"menu-sidebar-content js-scrollbar1\">\n    <nav class=\"navbar-sidebar\">\n        <ul class=\"list-unstyled navbar-list\">\n\n            <li *ngFor=\"let tempProductCategory of productCategories\">\n\n                <a routerLink=\"/category/{{ tempProductCategory.id }}\" routerLinkActive=\"active-link\">\n                    {{ tempProductCategory.categoryName }}\n                </a>\n\n            </li>\n        \n        </ul>\n    </nav>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Product } from 'src/app/common/product';\nimport { ProductService } from 'src/app/services/product.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { CartService } from 'src/app/services/cart.service';\nimport { CartItem } from 'src/app/common/cart-item';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n\n  product: Product = new Product();\n\n  constructor(private productService: ProductService,\n              private cartService: CartService,\n              private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(() => {\n      this.handleProductDetails();\n    })\n  }\n\n  handleProductDetails() {\n\n    // get the \"id\" param string. convert string to a number using the \"+\" symbol\n    const theProductId: number = +this.route.snapshot.paramMap.get('id');\n\n    this.productService.getProduct(theProductId).subscribe(\n      data => {\n        this.product = data;\n      }\n    )\n  }\n\n  addToCart() {\n\n    console.log(`Adding to cart: ${this.product.name}, ${this.product.unitPrice}`);\n    const theCartItem = new CartItem(this.product);\n    this.cartService.addToCart(theCartItem);\n    \n  }\n\n}\n","<div class=\"detail-section\">\n    <div class=\"container-fluid\">\n\n        <img src=\"{{ product.imageUrl }}\" class=\"detail-img\">\n\n        <h3>{{ product.name }}</h3>\n        <div class=\"price\">{{ product.unitPrice | currency:'USD' }}</div>\n        <button (click)=\"addToCart()\" class=\"btn btn-primary btn-sm\">Add to cart</button>\n\n        <hr>\n        <h4>Description</h4>\n        <p>{{ product.description }}</p>\n\n        <a routerLink=\"/products\" class=\"mt-5\">Back to Product List</a>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/services/product.service';\nimport { Product } from 'src/app/common/product';\nimport { ActivatedRoute } from '@angular/router';\nimport { timeoutWith } from 'rxjs/operators';\nimport { CartItem } from 'src/app/common/cart-item';\nimport { CartService } from 'src/app/services/cart.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list-grid.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n\n  products: Product[] = [];\n  currentCategoryId: number = 1;\n  previousCategoryId: number = 1;\n  searchMode: boolean = false;\n\n  // new properties for pagination\n  thePageNumber: number = 1;\n  thePageSize: number = 5;\n  theTotalElements: number = 0;\n\n  previousKeyword: string = null;\n\n  constructor(private productService: ProductService,\n              private cartService: CartService,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(() => {\n      this.listProducts();\n    });\n  }\n\n  listProducts() {\n\n    this.searchMode = this.route.snapshot.paramMap.has('keyword');\n\n    if (this.searchMode) {\n      this.handleSearchProducts();\n    }\n    else {\n      this.handleListProducts();\n    }\n\n  }\n\n  handleSearchProducts() {\n\n    const theKeyword: string = this.route.snapshot.paramMap.get('keyword');\n\n    // if we have a different keyword than previous\n    // then set thePageNumber to 1\n\n    if (this.previousKeyword != theKeyword) {\n      this.thePageNumber = 1;\n    }\n\n    this.previousKeyword = theKeyword;\n\n    console.log(`keyword=${theKeyword}, thePageNumber=${this.thePageNumber}`);\n\n    // now search for the products using keyword\n    this.productService.searchProductsPaginate(this.thePageNumber - 1,\n                                               this.thePageSize,\n                                               theKeyword).subscribe(this.processResult());\n                                               \n  }\n\n  handleListProducts() {\n\n    // check if \"id\" parameter is available\n    const hasCategoryId: boolean = this.route.snapshot.paramMap.has('id');\n\n    if (hasCategoryId) {\n      // get the \"id\" param string. convert string to a number using the \"+\" symbol\n      this.currentCategoryId = +this.route.snapshot.paramMap.get('id');\n    }\n    else {\n      // not category id available ... default to category id 1\n      this.currentCategoryId = 1;\n    }\n\n    //\n    // Check if we have a different category than previous\n    // Note: Angular will reuse a component if it is currently being viewed\n    //\n\n    // if we have a different category id than previous\n    // then set thePageNumber back to 1\n    if (this.previousCategoryId != this.currentCategoryId) {\n      this.thePageNumber = 1;\n    }\n\n    this.previousCategoryId = this.currentCategoryId;\n\n    console.log(`currentCategoryId=${this.currentCategoryId}, thePageNumber=${this.thePageNumber}`);\n\n    // now get the products for the given category id\n    this.productService.getProductListPaginate(this.thePageNumber - 1,\n                                               this.thePageSize,\n                                               this.currentCategoryId)\n                                               .subscribe(this.processResult());\n  }\n\n  processResult() {\n    return data => {\n      this.products = data._embedded.products;\n      this.thePageNumber = data.page.number + 1;\n      this.thePageSize = data.page.size;\n      this.theTotalElements = data.page.totalElements;\n    };\n  }\n\n  updatePageSize(pageSize: number) {\n    this.thePageSize = pageSize;\n    this.thePageNumber = 1;\n    this.listProducts();\n  }\n\n  addToCart(theProduct: Product) {\n    \n    console.log(`Adding to cart: ${theProduct.name}, ${theProduct.unitPrice}`);\n\n    // TODO ... do the real work\n    const theCartItem = new CartItem(theProduct);\n\n    this.cartService.addToCart(theCartItem);\n  }\n\n}\n","<div class=\"main-content\">\n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n\n                <!-- loop over the collection of products -->\n                <div *ngFor=\"let tempProduct of products\" class=\"col-md-3\">\n\n                    <div class=\"product-box\">\n\n                        <a routerLink=\"/products/{{ tempProduct.id }}\">\n                            <img src=\"{{ tempProduct.imageUrl }}\" class=\"img-responsive\">\n                        </a>\n\n                        <a routerLink=\"/products/{{ tempProduct.id }}\">\n                            <h1>{{ tempProduct.name }}</h1>\n                        </a>\n                        \n                        <div class=\"price\">{{ tempProduct.unitPrice | currency:'USD' }}</div>\n                        <button (click)=\"addToCart(tempProduct)\" class=\"btn btn-primary btn-sm\">Add to cart</button>\n                    </div>\n\n                </div>\n\n                <!-- if products empty then display a message-->\n                <div *ngIf=\"products?.length == 0\" class=\"alert alert-warning col-md-12\" role=\"alert\">\n                    No products found.\n                </div>\n\n            </div>\n\n            <!-- begin footer -->\n            <div class=\"footer-pagination\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\"></div>\n\n                    <div class=\"col-md-6\">\n                        <div class=\"row\">\n                            <div class=\"col-md-9\" style=\"padding-left: 30%\">\n                            \n                                <ngb-pagination [(page)]=\"thePageNumber\"\n                                                [pageSize]=\"thePageSize\"\n                                                [collectionSize]=\"theTotalElements\"\n                                                [maxSize]=\"5\"\n                                                [boundaryLinks]=\"true\"\n                                                (pageChange)=\"listProducts()\">\n\n                                </ngb-pagination>\n\n                            </div>\n\n                            <div class=\"col-md-3 mt-2\" style=\"text-align: right;\">\n                                <span class=\"mr-2\">Page Size</span>\n\n                                <select (change)=\"updatePageSize($event.target.value)\">\n                                    <option>2</option>\n                                    <option selected=\"true\">5</option>\n                                    <option>10</option>\n                                    <option>20</option>\n                                    <option>50</option>\n                                </select>\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n            <!-- end footer -->\n\n        </div>\n    </div>\n</div>\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  doSearch(value: string) {\n    console.log(`value=${value}`);\n    this.router.navigateByUrl(`/search/${value}`);\n  }\n}\n","<div class=\"form-header\">\n\n    <input #myInput type=\"text\" \n           placeholder=\"Search for products ...\"\n           class=\"au-input au-input-xl\"\n           (keyup.enter)=\"doSearch(myInput.value)\"  />\n\n    <button (click)=\"doSearch(myInput.value)\" class=\"au-btn-submit\">\n        Search\n    </button>\n\n</div>","import { Injectable } from '@angular/core';\nimport { CartItem } from '../common/cart-item';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  cartItems: CartItem[] = [];\n\n  totalPrice: Subject<number> = new Subject<number>();\n  totalQuantity: Subject<number> = new Subject<number>();\n\n  constructor() { }\n\n  addToCart(theCartItem: CartItem) {\n\n    // check if we already have the item in our cart\n    let alreadyExistsInCart: boolean = false;\n    let existingCartItem: CartItem = undefined;\n\n    if (this.cartItems.length > 0) {\n      // find the item in the cart based on item id\n\n      existingCartItem = this.cartItems.find( tempCartItem => tempCartItem.id === theCartItem.id );\n\n      // check if we found it\n      alreadyExistsInCart = (existingCartItem != undefined);\n    }\n\n    if (alreadyExistsInCart) {\n      // increment the quantity\n      existingCartItem.quantity++;\n    }\n    else {\n      // just add the item to the array\n      this.cartItems.push(theCartItem);\n    }\n\n    // compute cart total price and total quantity\n    this.computeCartTotals();\n  }\n\n  computeCartTotals() {\n\n    let totalPriceValue: number = 0;\n    let totalQuantityValue: number = 0;\n\n    for (let currentCartItem of this.cartItems) {\n      totalPriceValue += currentCartItem.quantity * currentCartItem.unitPrice;\n      totalQuantityValue += currentCartItem.quantity;\n    }\n\n    // publish the new values ... all subscribers will receive the new data\n    this.totalPrice.next(totalPriceValue);\n    this.totalQuantity.next(totalQuantityValue);\n\n    // log cart data just for debugging purposes\n    this.logCartData(totalPriceValue, totalQuantityValue);\n  }\n\n  logCartData(totalPriceValue: number, totalQuantityValue: number) {\n\n    console.log('Contents of the cart');\n    for (let tempCartItem of this.cartItems) {\n      const subTotalPrice = tempCartItem.quantity * tempCartItem.unitPrice;\n      console.log(`name: ${tempCartItem.name}, quantity=${tempCartItem.quantity}, unitPrice=${tempCartItem.unitPrice}, subTotalPrice=${subTotalPrice}`);\n    }\n\n    console.log(`totalPrice: ${totalPriceValue.toFixed(2)}, totalQuantity: ${totalQuantityValue}`);\n    console.log('----');\n  }\n\n  decrementQuantity(theCartItem: CartItem) {\n\n    theCartItem.quantity--;\n\n    if (theCartItem.quantity === 0) {\n      this.remove(theCartItem);\n    }\n    else {\n      this.computeCartTotals();\n    }\n  }\n\n  remove(theCartItem: CartItem) {\n\n    // get index of item in the array\n    const itemIndex = this.cartItems.findIndex( tempCartItem => tempCartItem.id === theCartItem.id );\n\n    // if found, remove the item from the array at the given index\n    if (itemIndex > -1) {\n      this.cartItems.splice(itemIndex, 1);\n\n      this.computeCartTotals();\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Product } from '../common/product';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProductCategory } from '../common/product-category';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  private baseUrl = 'http://localhost:8080/api/products';\n\n  private categoryUrl = 'http://localhost:8080/api/product-category';\n\n  constructor(private httpClient: HttpClient) { }\n\n  getProduct(theProductId: number): Observable<Product> {\n\n    // need to build URL based on product id\n    const productUrl = `${this.baseUrl}/${theProductId}`;\n\n    return this.httpClient.get<Product>(productUrl);\n  }\n\n  getProductListPaginate(thePage: number, \n                         thePageSize: number, \n                         theCategoryId: number): Observable<GetResponseProducts> {\n\n    // need to build URL based on category id, page and size \n    const searchUrl = `${this.baseUrl}/search/findByCategoryId?id=${theCategoryId}`\n                    + `&page=${thePage}&size=${thePageSize}`;\n\n    return this.httpClient.get<GetResponseProducts>(searchUrl);\n  }\n\n\n  getProductList(theCategoryId: number): Observable<Product[]> {\n\n    // need to build URL based on category id \n    const searchUrl = `${this.baseUrl}/search/findByCategoryId?id=${theCategoryId}`;\n\n    return this.getProducts(searchUrl);\n  }\n\n  searchProducts(theKeyword: string): Observable<Product[]> {\n\n    // need to build URL based on the keyword \n    const searchUrl = `${this.baseUrl}/search/findByNameContaining?name=${theKeyword}`;\n\n    return this.getProducts(searchUrl);\n  }\n\n  searchProductsPaginate(thePage: number, \n                        thePageSize: number, \n                        theKeyword: string): Observable<GetResponseProducts> {\n\n    // need to build URL based on keyword, page and size \n    const searchUrl = `${this.baseUrl}/search/findByNameContaining?name=${theKeyword}`\n                    + `&page=${thePage}&size=${thePageSize}`;\n    \n    return this.httpClient.get<GetResponseProducts>(searchUrl);\n  }\n\n\n\n  private getProducts(searchUrl: string): Observable<Product[]> {\n    return this.httpClient.get<GetResponseProducts>(searchUrl).pipe(map(response => response._embedded.products));\n  }\n\n  getProductCategories(): Observable<ProductCategory[]> {\n\n    return this.httpClient.get<GetResponseProductCategory>(this.categoryUrl).pipe(\n      map(response => response._embedded.productCategory)\n    );\n  }\n\n}\n\ninterface GetResponseProducts {\n  _embedded: {\n    products: Product[];\n  },\n  page: {\n    size: number,\n    totalElements: number,\n    totalPages: number,\n    number: number\n  }\n}\n\ninterface GetResponseProductCategory {\n  _embedded: {\n    productCategory: ProductCategory[];\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}